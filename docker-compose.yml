services:
  auth-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: auth-db
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - auth-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  auth-service:
    build: ./auth-service
    env_file:
      - ./auth-service/.env
    depends_on:
      auth-db:
        condition: service_healthy
        restart: true
    networks:
      - auth-net
      - shared-net
      
  task-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: task-db
    volumes:
      - task-db-data:/var/lib/postgresql/data
    networks:
      - task-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  task-service:
    build: ./task-service
    env_file:
      - ./task-service/.env
    depends_on:
      task-db:
        condition: service_healthy
        restart: true
    networks:
      - task-net
      - shared-net

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    networks:
      - shared-net

networks:
  auth-net:
  task-net:
  shared-net:

volumes:
  auth-db-data:
  task-db-data: